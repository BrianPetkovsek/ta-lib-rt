<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

  <xs:element name="FinancialFunctionGroups">
    <!--Each function group is embedded in the <FinancialFunctionGroup> tags. There are
        no limits to the number of function groups in the xml document.-->
    <xs:complexType>
      <xs:sequence minOccurs="1" maxOccurs="unbounded">
        <xs:element name="FinancialFunctionGroup"  type="FinancialFunctionGroupType"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="version" use="required"/>
    </xs:complexType>
  </xs:element>
  
  <xs:complexType name="FunctionsType">
      <xs:sequence minOccurs="1" maxOccurs="unbounded">
        <xs:element name="Function"  type="FunctionType"/>
      </xs:sequence>
  </xs:complexType>

  
  
  <xs:simpleType name="SpecialInputType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Pointer" />
      <xs:enumeration value="Pointer to Pointer" />
      <xs:enumeration value="Pointer to File" />
    </xs:restriction>
  </xs:simpleType>
  
  <!--Each function needs some input. This type defines to what category
      each input belongs to.-->
  <xs:simpleType name="RequiredInputType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Open" />
      <xs:enumeration value="High" />
      <xs:enumeration value="Low" />
      <xs:enumeration value="Close" />
      <xs:enumeration value="Volume" />
      <xs:enumeration value="Open Interest" />
      <xs:enumeration value="Double" />
      <xs:enumeration value="Integer" />
      <xs:enumeration value="Double Array" />
      <xs:enumeration value="Integer Array" />
    </xs:restriction>
  </xs:simpleType>

  <!--Different MA types for optional input.-->
  <xs:simpleType name="MAType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="0" id="SMA" />
      <xs:enumeration value="1" id="EMA" />
      <xs:enumeration value="2" id="WMA" />
      <xs:enumeration value="3" id="DEMA" />
      <xs:enumeration value="4" id="TEMA" />
      <xs:enumeration value="5" id="TRIMA" />
      <xs:enumeration value="6" id="KAMA" />
      <xs:enumeration value="7" id="MAMA" />
      <xs:enumeration value="8" id="T3" />
    </xs:restriction>
  </xs:simpleType>

  <!--This type defines to what category
      optional input arguments belongs to.-->
  <xs:simpleType name="OptionalInputType">
    <xs:restriction base="xs:string">
      <!--A single 64-bit floating point value-->
      <xs:enumeration value="Double" />
      <!--A singe 32-bit or 64-bit integer value-->
      <xs:enumeration value="Integer" />
      <!--A type of moving average.-->
      <xs:enumeration value="MA Type" />
    </xs:restriction>
  </xs:simpleType>

  <!--This type defines to what category
      each output belongs to.-->
  <xs:simpleType name="OutputType">
    <xs:restriction base="xs:string">
      <!--Array of 64-bit floating point values.-->
      <xs:enumeration value="Double Array" />
      <!--64-bit floating point value.-->
      <xs:enumeration value="Double" />
      <!--Array of 32-bit or 64-bit integer values.-->
      <xs:enumeration value="Integer Array" />
      <!--32-bit or 64-bit integer value.-->
      <xs:enumeration value="Integer" />
      
      <xs:enumeration value="Pointer to Integer" />
      <xs:enumeration value="Pointer to Double" />
    </xs:restriction>
  </xs:simpleType>

  <!--Each function group has to be categorized. That way the functions can be
      presented to the user in an ordered way.-->
  <xs:simpleType name="GroupId">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Math Operators" />
      <xs:enumeration value="Math Transform" />
      <xs:enumeration value="Overlap Studies" />
      <xs:enumeration value="Volatility Indicators" />
      <xs:enumeration value="Momentum Indicators" />
      <xs:enumeration value="Cycle Indicators" />
      <xs:enumeration value="Volume Indicators" />
      <xs:enumeration value="Pattern Recognition" />
      <xs:enumeration value="Statistic Functions" />
      <xs:enumeration value="Price Transform" />
      <xs:enumeration value="Undefined" />
    </xs:restriction>
  </xs:simpleType>

  <!--Optional flags for the function.-->
  <xs:simpleType name="FunctionFlags">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Overlap" />
      <xs:enumeration value="Volume" />
      <xs:enumeration value="Candlestick" />
      <xs:enumeration value="Unstable Period" />
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="FunctionTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Lookback" />
      <xs:enumeration value="Regular" />
      <xs:enumeration value="StateInit" />
      <xs:enumeration value="State" />
      <xs:enumeration value="BatchState" />
      <xs:enumeration value="StateFree" />
      <xs:enumeration value="StateLoad" />
      <xs:enumeration value="StateSave" />
    </xs:restriction>
  </xs:simpleType>
  
  <!--Optional flags for the function.-->
  <xs:simpleType name="FunctionReturnType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Integer" />
      <xs:enumeration value="TA_Result" />
    </xs:restriction>
  </xs:simpleType>
  
  
  <xs:simpleType name="StateMemoryFieldTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Integer" />
      <xs:enumeration value="Double" />
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="StateMemoryFieldType">
      <xs:sequence minOccurs="1" maxOccurs="1">
        <xs:element name="Type"  type="StateMemoryFieldTypeType" />
        <xs:element name="Name"  type="xs:string" />
      </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="StateMemoryType">
      <xs:sequence minOccurs="1" maxOccurs="unbounded">
        <xs:element name="StateMemoryField"  type="StateMemoryFieldType"/>
      </xs:sequence>
  </xs:complexType>
  
  
  
  <xs:simpleType name="StateFieldTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Integer" />
      <xs:enumeration value="Double" />
      <xs:enumeration value="Pointer" />
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="StateFieldType">
      <xs:sequence minOccurs="1" maxOccurs="1">
        <xs:element name="Type"  type="StateFieldTypeType" />
        <xs:element name="Name"  type="xs:string" />
      </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="StateType">
      <xs:sequence minOccurs="1" maxOccurs="unbounded">
        <xs:element name="StateField"  type="StateFieldType"/>
      </xs:sequence>
  </xs:complexType>
  

  <!--Optional flags for the output values.-->
  <xs:simpleType name="OutputFlags">
      <xs:restriction base="xs:string">
      <xs:enumeration value="Line" />
      <xs:enumeration value="Dotted Line" />
      <xs:enumeration value="Dashed Line" />
      <xs:enumeration value="Dots" />
      <xs:enumeration value="Histogram" />
      <xs:enumeration value="Pattern Bool" />
      <xs:enumeration value="Pattern Bull Bear" />
      <xs:enumeration value="Pattern Strength" />
      <xs:enumeration value="Positive" />
      <xs:enumeration value="Negative" />
      <xs:enumeration value="Zero" />
      <xs:enumeration value="Upper Limit" />
      <xs:enumeration value="Lower Limit" />
    </xs:restriction>
  </xs:simpleType>
  
  
  
    <xs:complexType name="FunctionType">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1" />
      <xs:element name="Type" type="FunctionTypeType" minOccurs="1" maxOccurs="1" />
      <xs:element name="ReturnValue" type="FunctionReturnType" minOccurs="1" maxOccurs="1" />
      
       <!--This section defines all the input arguments.-->
      <xs:element name="SpecialInputArguments" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="SpecialInputArgument" minOccurs="0" maxOccurs="6">
              <xs:complexType>
                <xs:sequence>
                  <!--Type of the input. See type definition SpecialInputType above.-->
                  <xs:element name="Type" type="SpecialInputType" minOccurs="1" maxOccurs="1" />
                  <!--The name of the input.-->
                  <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      
      <!--This section defines all the input arguments.-->
      <xs:element name="RequiredInputArguments" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <!--This defines a required argument. There are only 6 input types
                  so the maximum occurence is 6.-->
            <xs:element name="RequiredInputArgument" minOccurs="1" maxOccurs="8">
              <xs:complexType>
                <xs:sequence>
                  <!--Type of the input. See type definition RequiredInputType above.-->
                  <xs:element name="Type" type="RequiredInputType" minOccurs="1" maxOccurs="1" />
                  <!--The name of the input.-->
                  <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="OptionalInputArguments" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <!--This defines an optional argument of which there can be an
                  unlimited number.-->
            <xs:element name="OptionalInputArgument" minOccurs="1" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <!--The name of the input.-->
                  <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1" />
                  <!--A short description what the parameter is. This should be
                      really short as it can be used for tooltips.-->
                  <xs:element name="ShortDescription" type="xs:string" minOccurs="1" maxOccurs="1" />
                  <!--A detailed description of the parameter. This can be displayed to
                      the user if he wants more information.-->
                  <xs:element name="LongDescription" type="xs:string" minOccurs="0" maxOccurs="1" />
                  <!--Type of the input. See type definition InputType above.-->
                  <xs:element name="Type" type="OptionalInputType" minOccurs="1" maxOccurs="1" />
                  <!--If the input type is Double or Integer then a range can
                        be defined for it. This tag is optional.-->
                  <xs:element name="Range" minOccurs="0" maxOccurs="1">
                    <xs:complexType>
                      <xs:sequence>
                        <!--The minimum value that can be used for the input value.-->
                        <xs:element name="Minimum" type="xs:string" minOccurs="1" maxOccurs="1" />
                        <!--The maximum value that can be used for the output value.-->
                        <xs:element name="Maximum" type="xs:string" minOccurs="1" maxOccurs="1" />
                        <!--Precision - only for Double Range-->
                        <xs:element name="Precision" type="xs:string" minOccurs="0" maxOccurs="1" />
                        <!--Used for parameter optimizations.-->
                        <xs:element name="SuggestedStart" type="xs:string" minOccurs="1" maxOccurs="1" />
                        <!-- Used for parameter optimizations.-->
                        <xs:element name="SuggestedEnd" type="xs:string" minOccurs="1" maxOccurs="1" />
                        <!-- Used for parameter optimizations.-->
                        <xs:element name="SuggestedIncrement" type="xs:string" minOccurs="1" maxOccurs="1" />
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>

                  <!--Default value. For an integer or decimal list this value
                        is one of the Name tags of an list element.-->
                  <xs:element name="DefaultValue" type="xs:string" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <!--Defines all the output arguments.-->
      <xs:element name="OutputArguments" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <!--Defines one output argument.-->
            <xs:element name="OutputArgument" minOccurs="1" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <!--The type of the output argument. For possible values
                        see type definition OutputType above.-->
                  <xs:element name="Type" type="OutputType" minOccurs="1" maxOccurs="1" />
                  <!--Name of the output.-->
                  <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1" />
                  <!--Flags that can be attached to the output.-->
                  <xs:element name="Flags" minOccurs="0" maxOccurs="1">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Flag" type="OutputFlags" minOccurs="1" maxOccurs="unbounded"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

    </xs:sequence>
  </xs:complexType>
  
  
  <!--This defines the actual function group.-->
  <xs:complexType name="FinancialFunctionGroupType">
    <xs:sequence>
      <!--Each function needs a short name. That name has to match
            the corresponding TA-Lib function.-->
      <xs:element name="Abbreviation" type="xs:string" minOccurs="1" maxOccurs="1" />
      <!--This is the full name of the function.-->
      <xs:element name="CamelCaseName" type="xs:string" minOccurs="1" maxOccurs="1" />
      <!--A short description what the function is doing. This should be
            really short as it can be used for tooltips.-->
      <xs:element name="ShortDescription" type="xs:string" minOccurs="1" maxOccurs="1" />
      <!--A detailed description of the function. This can be displayed to
            the user if he wants more information. Not currently used.
      <xs:element name="LongDescription" type="xs:string" minOccurs="0" maxOccurs="1" />-->
      <!--The group the function belongs to.-->
      <xs:element name="GroupId" type="GroupId" minOccurs="1" maxOccurs="1" />
      <!--Flags that can be attached to the function.-->
      <xs:element name="Flags" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Flag" type="FunctionFlags" minOccurs="1" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StateMemory" type="StateMemoryType" minOccurs="1" maxOccurs="1" />
      <xs:element name="State" type="StateType" minOccurs="1" maxOccurs="1" />
      <xs:element name="Functions"  type="FunctionsType" minOccurs="1" maxOccurs="1" />
    </xs:sequence>
  </xs:complexType> 
  
  
</xs:schema>

 
